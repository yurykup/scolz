from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes
import os

TOKEN = os.getenv("BOT_TOKEN")  # –±–µ–∑–æ–ø–∞—Å–Ω–æ —Ç—è–Ω–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö

menu = {
    "üçî –ï–¥–∞": [
        ("–ü–∏—Ü—Ü–∞", "3 –ø–æ—Ü–µ–ª—É—è"),
        ("–ë–ª–∏–Ω—á–∏–∫–∏", "2 –æ–±–Ω–∏–º–∞—à–∫–∏"),
        ("–®–æ–∫–æ–ª–∞–¥–∫–∞", "1 —â–µ—á–∫—É –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å")
    ],
    "üíÜ –£—Å–ª—É–≥–∏": [
        ("–ú–∞—Å—Å–∞–∂ —Å–ø–∏–Ω—ã", "5 –ø–æ—Ü–µ–ª—É–µ–≤"),
        ("–ü–æ–≥–ª–∞–¥–∏—Ç—å –≤–æ–ª–æ—Å—ã", "3 –æ–±–Ω–∏–º–∞—à–∫–∏"),
        ("–£—Å—ã–ø–∏—Ç—å –ø–æ–¥ —Å–µ—Ä–∏–∞–ª", "4 –æ–±–Ω–∏–º–∞—à–∫–∏")
    ],
    "üéÅ –ë–æ–Ω—É—Å—ã": [
        ("–°—é—Ä–ø—Ä–∏–∑", "7 –æ–±–Ω–∏–º–∞—à–µ–∫ –∏ 5 –ø–æ—Ü–µ–ª—É–µ–≤"),
        ("–ü–ª–µ–¥ + —á–∞–π", "4 –æ–±–Ω–∏–º–∞—à–∫–∏"),
        ("–ñ–µ–ª–∞–Ω–∏–µ", "10 –ø–æ—Ü–µ–ª—É–µ–≤ ‚ù§Ô∏è")
    ]
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton(cat, callback_data=f"category|{cat}")]
        for cat in menu
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç, —Å–æ–ª–Ω—ã—à–∫–æ üíñ\n–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–µ–≥–æ–¥–Ω—è üòä", reply_markup=reply_markup
    )

async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    data = query.data
    if data.startswith("category|"):
        cat = data.split("|")[1]
        items = menu[cat]
        keyboard = [
            [InlineKeyboardButton(f"{name} ‚Äî {price}", callback_data=f"item|{name}|{price}")]
            for name, price in items
        ]
        keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")])
        await query.edit_message_text(
            text=f"üìã {cat}:\n–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å üíû",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    elif data.startswith("item|"):
        name, price = data.split("|")[1:]
        await query.edit_message_text(
            text=f"–¢—ã –≤—ã–±—Ä–∞–ª–∞ *{name}* ü•∞\n–°—Ç–æ–∏–º–æ—Å—Ç—å: _{price}_\n\n–û–ø–ª–∞—Ç–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å! üíã",
            parse_mode="Markdown"
        )
    elif data == "back":
        await start(update, context)

if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button))
    app.run_polling()
